#include <Servo.h>
Servo miServo;

const int motorA = 12;
const byte velocidadA = 3;
const int frenoA = 9;
const int pinObstaculo1 = 2;
const int pinObstaculo2 = 4;

// Pins for sensor 1
const int trigPin1 = 4;
const int echoPin1 = 2;

// Pins for sensor 2
const int trigPin2 = 13;
const int echoPin2 = 11;

// Distance limits in cm
const int distanciaMax = 53;
const int distanciaMin = 43;

// Time limit in milliseconds (51 seconds)
const unsigned long tiempoLimite = 45000;
unsigned long tiempoInicio;

// Function to measure distance with an ultrasonic sensor
long medirDistancia(int trigPin, int echoPin) {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duracion = pulseIn(echoPin, HIGH);
  long distancia = duracion * 0.034 / 2;  // Conversion to cm
  return distancia;
}

void setup() {
  // Configuration for the servo and motors
  Serial.begin(9600);
  pinMode(motorA, OUTPUT);
  pinMode(velocidadA, OUTPUT);
  pinMode(frenoA, OUTPUT);
  miServo.attach(5);  // Connect the servo to pin 5

  // Pin configuration for the sensors
  pinMode(trigPin1, OUTPUT);
  pinMode(echoPin1, INPUT);
  pinMode(trigPin2, OUTPUT);
  pinMode(echoPin2, INPUT);

  // Store the start time
  tiempoInicio = millis();
}

void loop() {
  // Check if the time limit has been reached
  if (millis() - tiempoInicio >= tiempoLimite) {
    Serial.println("Time limit reached, stopping program.");
    
    // Stop movement and servo
    digitalWrite(motorA, LOW);
    digitalWrite(frenoA, HIGH);  // Activate brake
    analogWrite(velocidadA, 0);  // Speed 0
    miServo.detach();  // Stop the servo
    
    while (true);  // Stop the program
  }

  // Measure distance for sensor 1
  long distancia1 = medirDistancia(trigPin1, echoPin1);
  
  // Measure distance for sensor 2
  long distancia2 = medirDistancia(trigPin2, echoPin2);

  // Display distances in the serial monitor
  Serial.print("Distance Sensor 1: ");
  Serial.print(distancia1);
  Serial.println(" cm");

  Serial.print("Distance Sensor 2: ");
  Serial.print(distancia2);
  Serial.println(" cm");

  // Logic for Sensor 1
  if (distancia1 >= distanciaMax) {
    Serial.println("Avoid obstacle");
    digitalWrite(motorA, HIGH);
    digitalWrite(frenoA, LOW);
    analogWrite(velocidadA, 150);
    miServo.write(134);
  } else if (distancia1 <= distanciaMin) {
    Serial.println("Avoid obstacle");
    miServo.write(104);  // Turn servo to the left
    digitalWrite(motorA, HIGH);
    digitalWrite(frenoA, LOW);
    analogWrite(velocidadA, 150);
  } else {
    miServo.write(122);  // Servo in neutral position
    digitalWrite(motorA, HIGH);
    digitalWrite(frenoA, LOW);
    analogWrite(velocidadA, 150);
  }

  // Logic for Sensor 2
  if (distancia2 >= distanciaMax) {
    Serial.println("Avoid obstacle");
    miServo.write(104);  // Turn servo to the left
    digitalWrite(motorA, HIGH);
    digitalWrite(frenoA, LOW);
    analogWrite(velocidadA, 150);
  } else if (distancia2 <= distanciaMin) {
    Serial.println("Avoid obstacle");
    digitalWrite(motorA, HIGH);
    digitalWrite(frenoA, LOW);
    analogWrite(velocidadA, 150);
    miServo.write(134);
  } else {
    miServo.write(122);  // Servo in neutral position
    digitalWrite(motorA, HIGH);
    digitalWrite(frenoA, LOW);
    analogWrite(velocidadA, 150);
  }

  delay(100); // Reduced delay to improve detection speed
}
